[workspace]
members = [
    "crates/isolate_runtime",
    "crates/client",
    "crates/server",
    "crates/utils",
    "crates/api",
    "crates/control_plane",
    "crates/data_plane",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace.dependencies]
darx_client = { path = "./crates/client" }
darx_server = { path = "./crates/server" }
darx_isolate_runtime = { path = "./crates/isolate_runtime" }
darx_db = { path = "./crates/db" }
darx_utils = { path = "./crates/utils" }
darx_api = {path = "./crates/api" }
darx_control_plane = {path = "./crates/control_plane" }
darx_data_plane = {path = "./crates/data_plane"}


# Deno related crates from v1.32.3
# https://github.com/denoland/deno/blob/v1.32.3/Cargo.toml
deno_core = { version = "= 0.179.0" }
deno_console = {version = "= 0.97.0" }
deno_crypto = { version = "= 0.111.0" }
deno_fetch = { version = "= 0.121.0" }
deno_url = {version = "= 0.97.0"}
deno_web = {version = "= 0.128.0"}
deno_webidl = { version = "= 0.97.0"}
deno_tls = { version = "= 0.84.0" }

clap = { version = "4.1.8", features = ["derive", "env"] }
tokio = { version = "1.25.0", features = ["full"] }
actix-web = "4"
tracing-actix-web = "0.7"
actix-cors = "0.6"
#todo: rusqlite is sync, we might need async.
rusqlite = { version = "0.29.0", features = ["bundled"] }
sqlx = {version = "0.6", features = ["runtime-tokio-rustls", "mysql", "json", "macros", "offline"]}

async-trait = { version = "0.1.68" }
anyhow = { version = "1"}
thiserror = { version = "1" }
futures = { version = "0.3" }
futures-util = { version = "0.3" }
serde = {version = "1.0.157", features = ["derive"]}
serde_json = { version = "1.0", features = ["raw_value"] }
notify = {version = "6.0.0", default-features = false, features = ["macos_kqueue"]}
notify-debouncer-mini = {version = "0.3.0"}
criterion = { version = "0.4", features = ["async_tokio"] }
# !!! IMPORTANT: reqwest version must match exactly with the version in deno_fetch. !!!
reqwest = { version = "=0.11.14", default-features = false, features = ["rustls-tls", "json", "__rustls"] }
# !!! IMPORTANT: reqwest version must match exactly with the version in deno_fetch. !!!

dotenvy = { version = "0.15" }
redis = { version = "0.23.0", default-features = false, features = ["tokio-rustls-comp"] }
dashmap = { version = "5.4.0" }
rust-s3 = { version = "0.33", default-features = false, features = ["tokio-rustls-tls"] }
once_cell = { version = "1.18.0" }
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
nanoid = { version = "0.4" }
handlebars = { version = "4.3" }
swc_common = { version = "0.31.17" }
swc_ecma_ast = { version = "0.107.1" }
swc_ecma_parser = { version = "0.137.2" }
arrayvec = "0.7.4"
patricia_tree = "0.6.1"

[profile.dev.package.sqlx-macros]
opt-level = 3